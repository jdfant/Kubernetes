global
    log 127.0.0.1 local0 notice
    maxconn 2000
    user haproxy
    group haproxy
    tune.ssl.default-dh-param 2048
    ssl-default-bind-options ssl-min-ver TLSv1.2
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256

defaults
    log global
    mode http
    option forwardfor
    option http-server-close
    option dontlognull
    timeout connect 5000
    timeout client  5000
    timeout server  5000
    timeout tunnel  2h
    timeout client-fin 5000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

listen stats
    bind 192.168.100.80:9000 
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /haproxy_stats
    stats auth JD:xxxxxxxx

frontend Rancher
    bind 192.168.100.70:80
    bind 192.168.100.70:443 ssl crt /certs/chain.pem
    mode http
    default_backend Rancher_Frontend

backend Rancher_Frontend
    mode http
    balance  source
    #option forwardfor
    #option tcp-check
    server rancho 192.168.100.60:80 check fall 3 rise 2
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

listen Gitlab
    bind 192.168.100.82:80
    balance source
    #option tcp-check
        server  rancho 192.168.100.60:32121 check fall 3 rise 2
        server  node1  192.168.100.61:32121 check fall 3 rise 2
        server  node2  192.168.100.61:32121 check fall 3 rise 2

listen Postgres
    bind 192.168.100.83:5432
    balance source
    #option tcp-check
        server  rancho 192.168.100.60:32548 check fall 3 rise 2
        server  node1  192.168.100.61:32548 check fall 3 rise 2
        server  node2  192.168.100.61:32548 check fall 3 rise 2

listen Jenkins
    bind 192.168.100.84:80
    balance source
    #option tcp-check
        server  rancho 192.168.100.60:30297 check fall 3 rise 2
        server  node1  192.168.100.61:30297 check fall 3 rise 2
        server  node2  192.168.100.61:30297 check fall 3 rise 2

listen Docker_Registry
    bind 192.168.100.85:5000
    balance source
        server  rancho 192.168.100.60:32361 check fall 3 rise 2
        server  node1  192.168.100.61:32361 check fall 3 rise 2
        server  node2  192.168.100.61:32361 check fall 3 rise 2

