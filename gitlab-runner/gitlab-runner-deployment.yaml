apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    workload.user.cattle.io/workloadselector: deployment-gitlab-gitlab-runner
  name: gitlab-runner
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-gitlab-gitlab-runner
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-gitlab-gitlab-runner
    spec:
      containers:
      - env:
        - name: TZ
          value: America/Denver
        image: registry.home.lan:5000/gitlab-runner-jd@sha256:39c7b55acbc66628143a6f26df09da1d585de7f529522b63da7bb33e4db57ed0
        imagePullPolicy: Always
        name: gitlab-runner
        ports:
        - containerPort: 8093
          name: runner
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /etc/gitlab-runner
          name: runner
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      hostAliases:
      - hostnames:
        - gitlab.home.lan
        ip: 10.10.10.82
      - hostnames:
        - registry.home.lan
        ip: 10.10.10.90
      nodeName: node1
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: runner
        persistentVolumeClaim:
          claimName: gitlab-runner
